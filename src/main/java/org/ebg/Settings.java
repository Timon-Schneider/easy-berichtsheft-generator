/*
 * easy-berichtsheft-generator
 * Copyright (c) 2024. Timon Schneider (timon-schneider.com).
 * This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
 * You should have received a copy of the GNU General Public License along with this program. If not, see <https://www.gnu.org/licenses/>.
 */

package org.ebg;

import javax.swing.*;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.prefs.Preferences;

public class Settings {
    JPanel settingsPanel;
    private JLabel fontLabel;
    private JComboBox fontComboBox;
    private JLabel fontSizeLabel;
    private JSpinner fontSizeSpinner;
    private JButton saveButton;
    private static SpinnerNumberModel fontSizeSpinnerModel;
    private static Preferences prefs = Preferences.userNodeForPackage(Settings.class);
    private int fontSize;
    private String font;

    public Settings() {
        fontSize = prefs.getInt("fontSize", 12);
        fontSizeSpinnerModel = new SpinnerNumberModel(12, 1, 999, 1);
        fontSizeSpinner.setModel(fontSizeSpinnerModel);
        ((JSpinner.DefaultEditor) fontSizeSpinner.getEditor()).getTextField().setEditable(false);
        fontSizeSpinner.setValue(fontSize);

        font = prefs.get("font", "TIMES_ROMAN");
        String[] fonts = {
                "COURIER",
                "COURIER_BOLD",
                "COURIER_BOLD_OBLIQUE",
                "COURIER_OBLIQUE",
                "HELVETICA",
                "HELVETICA_BOLD",
                "HELVETICA_BOLD_OBLIQUE",
                "HELVETICA_OBLIQUE",
                "SYMBOL",
                "TIMES_BOLD",
                "TIMES_BOLD_ITALIC",
                "TIMES_ITALIC",
                "TIMES_ROMAN",
                "ZAPF_DINGBATS"
        };

        for (String font : fonts) {
            fontComboBox.addItem(font);
        }
        fontComboBox.setSelectedItem(font);
        saveButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                fontSize = (Integer) fontSizeSpinner.getValue();
                prefs.putInt("fontSize", fontSize);

                font = (String) fontComboBox.getSelectedItem();
                prefs.put("font", font);
            }
        });
        fontSizeSpinner.addChangeListener(new ChangeListener() {
            @Override
            public void stateChanged(ChangeEvent e) {
                fontSize = (Integer) fontSizeSpinner.getValue();
                prefs.putInt("fontSize", fontSize);
            }
        });
        fontComboBox.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                font = (String) fontComboBox.getSelectedItem();
                prefs.put("font", font);
            }
        });
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        settingsPanel = new JPanel();
        settingsPanel.setLayout(new GridBagLayout());
        fontLabel = new JLabel();
        fontLabel.setText("Font");
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.weightx = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.ipadx = 100;
        settingsPanel.add(fontLabel, gbc);
        fontComboBox = new JComboBox();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 1;
        gbc.weightx = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.ipadx = 200;
        settingsPanel.add(fontComboBox, gbc);
        fontSizeLabel = new JLabel();
        fontSizeLabel.setText("Font Size");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 3;
        gbc.anchor = GridBagConstraints.WEST;
        settingsPanel.add(fontSizeLabel, gbc);
        fontSizeSpinner = new JSpinner();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 3;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        settingsPanel.add(fontSizeSpinner, gbc);
        saveButton = new JButton();
        saveButton.setText("Save");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 5;
        gbc.gridwidth = 2;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        settingsPanel.add(saveButton, gbc);
        final JPanel spacer1 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.fill = GridBagConstraints.VERTICAL;
        gbc.ipady = 10;
        settingsPanel.add(spacer1, gbc);
        final JPanel spacer2 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 4;
        gbc.fill = GridBagConstraints.VERTICAL;
        gbc.ipady = 20;
        settingsPanel.add(spacer2, gbc);
        final JPanel spacer3 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.VERTICAL;
        gbc.ipady = 10;
        settingsPanel.add(spacer3, gbc);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return settingsPanel;
    }

}
